1:防止头文件多次包含 ：
	#ifndef COORDIN_H_
	#define COORDIN_H_

	#endif
2:自动存储持续性：声明的变量
  静态存储持续性：static
  线程存储持续性（C++11）：thread_local
  动态存储持续性：new（堆heap ）
 3：自动变量和栈（在栈中是如何存储的）
   寄存器变量 register
   静态变量：专门的静态存储区 必须初始化，未被初始化的默认为0；
   constexpr
   extern 引用声明 使用该变量的其他文件中。 
 4：可使用外部变量在多个文件程序之间共享数据  --》extern
   使用链接性为内部的静态变量在同一个文件的多个函数之间共享数据。  --》static
   作用域为整个文件的额变量为静态，不必担心域其他文件变量冲突
 5：const和volatile
 6：mutable---》const定义的结构体中，该变量修饰可修改。
 7：定位new运算符  ---》可以定位从某地址申请位置
 8：命名空间，匿名命名空间（作用于{}内）


 复习题：
  1： a.homer声明为自动变量
      b.在一个文件中声明为外部变量，在另一个文件中使用extern使用
      c.在本文件使用static声明，也可以使用匿名明明空间
      d.在函数声明前加static，beencalled声明为本地静态变量。
  2：using声明：名称空间内单个名称可用
    using编译：声明了这些变量
  3,4： 
    #include <iostream>
    // using namespace std; //using 编译指令

    int main(void)
    {
      //using 声明
      // using std::cout;
      // using std::cin;
      // using std::endl;

      double x;
      std::cout<<"Enter value:";
      while(!(std::cin>>x))  //TODO :这里什么时候失败？
      {
        std::cout<<"Bad input. Please enter a number:";
        std::cin.clear();
        while(std::cin.get() != '\n')
        {
          continue;
        }
      }
      std::cout<<"value:"<< x <<std::endl;
      return 0;
    }
  5:每个文件中单独的静态定义；
    未命名的命名空间中定义函数；
    重载的方式然后去尝试调用！
  6:10
    4
    0
    Other: 4, 1

  7:1
    4,1,2
    2
    2
    4,1,2
    2
